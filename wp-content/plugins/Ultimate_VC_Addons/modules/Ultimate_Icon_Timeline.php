<?phpif(!class_exists('Ultimate_Icon_Timeline')){	class Ultimate_Icon_Timeline	{		function __construct()		{			add_action('admin_init', array($this, 'add_icon_timeline'));			add_shortcode( 'icon_timeline', array($this, 'icon_timeline' ) );			add_shortcode( 'icon_timeline_item', array($this, 'icon_timeline_item' ) );			add_shortcode( 'icon_timeline_sep', array($this, 'icon_timeline_sep' ) );			add_shortcode( 'icon_timeline_feat', array($this, 'icon_timeline_feat' ) );		}		function add_icon_timeline()		{			if(function_exists('vc_map'))			{				vc_map(					array(					   "name" => __("Timeline","smile"),					   "base" => "icon_timeline",					   "class" => "vc_timeline",					   "icon" => "vc_timeline_icon",					   "category" => __("终极 VC扩展","smile"),					   "description" => __("旧时间轴和事件的时间表.","smile"),					   "as_parent" => array('only' => 'icon_timeline_item,icon_timeline_sep,icon_timeline_feat',),					   "content_element" => true,					   "show_settings_on_create" => false,					   					   "params" => array(					   							   	array(								 "type" => "dropdown",								 "class" => "",								 "heading" => __("高度","smile"),								 "param_name" => "timeline_style",								 "value" => array(								 		'Non-optimized (CSS)' => 'csstime',								 		'Optimized with JavaScript' => 'jstime',																		 ),								 "description" => __("你喜欢怎样的高度时间轴.","smile")							  ),						   array(							 "type" => "dropdown",							 "class" => "",							 "heading" => __("连接器线风格","smile"),							 "param_name" => "timeline_line_style",							 "value" => array(							 		'Dotted' => 'dotted',							 		'Solid ' => 'solid',																		'Dashed ' => 'dashed',																 		),							 "description" => __("选择的风格线,连接时间轴.","smile")						  ),												array(								"type" => "colorpicker",								"class" => "",								"heading" => __("连接器线的颜色:", "smile"),								"param_name" => "timeline_line_color",								"value" => "",								"description" => __("选择颜色的线连接时间表的项目.", "smile"),															),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("时间项的背景颜色块/容器:", "smile"),								"param_name" => "time_block_bg_color",								"value" => "",								"description" => __(" 给一个背景颜色时间项.", "smile"),															),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("选择字体颜色的物品分隔符:", "smile"),								"param_name" => "time_sep_color",								"value" => "",								"description" => __("选择字体颜色的物品分隔符.", "smile"),															),														array(								"type" => "colorpicker",								"class" => "",								"heading" => __("为项目分离器选择背景颜色:", "smile"),								"param_name" => "time_sep_bg_color",								"value" => "",								"description" => __("为项目分离器选择背景颜色.", "smile"),															),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("时间轴布局:", "smile"),								"param_name" => "timeline_layout",								"value" => array(									"Full Width " => "",									//"Auto Width " => "timeline-auto-width",									"Custom Width " => "timeline-custom-width",								),								"description" => __("选择时间轴的布局.", "smile"),							),							array(								"type" => "number",								"class" => "",								"heading" => __("自定义宽度 ", "smile"),								"param_name" => "custom_width",								"value" => 200,																"suffix" => "px",								"description" => __("提供自定义为每个块宽度", "smile"),								"dependency" => Array("element" => "timeline_layout","value" => array("timeline-custom-width")),							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("盘旋的动画:", "smile"),								"param_name" => "tl_animation",								"value" => array(									"None" => "",									"Slide Out" => "tl-animation-slide-out",									"Slide Up" => "tl-animation-slide-up",									"Slide Down" => "tl-animation-slide-down",																		"Shadow" => "tl-animation-shadow",								),								"description" => __("悬停动画可以给项目的时间轴.", "smile"),							),						),						"js_view" => 'VcColumnView'					));				// Add list item				vc_map(					array(					   "name" => __("项目分离器"),					   "base" => "icon_timeline_sep",					   "class" => "vc_timeline_sep",					   "icon" => "vc_timeline_sep_icon",					   "category" => __('时间轴','smile'),					   "content_element" => true,					   "as_child" => array('only' => 'icon_timeline'),					   					   "params" => array(						 	array(								"type" => "textfield",								"class" => "",								"heading" => __("分隔符的文本", "smile"),								"param_name" => "time_sep_title",								"admin_label" => true,								"value" => "",								"description" => __("提供这个时间表分隔符的文本.", "smile"),							),								array(								"type" => "colorpicker",								"param_name" => "time_sep_color",								"heading" => __("颜色","smile")							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("边缘样式 ", "smile"),								"param_name" => "line_style",								"value" => array(									"None" => "",									"Solid"=> "solid",									"Dashed" => "dashed",									"Dotted" => "dotted",									"Double" => "double",									"Inset" => "inset",									"Outset" => "outset",								),							),							array(								"type" => "colorpicker",								"param_name" => "line_color",								"heading" => __("边框色彩","smile"),								"dependency" => Array("element" => "line_style", "not_empty" => true),							),							array(								"type" => "number",								"param_name" => "line_width",								"heading" => "Border width",								"value" => "1",								"suffix" => "px",								"dependency" => Array("element" => "line_style", "not_empty" => true),							),							array(								"type" => "number",								"param_name" => "line_radius",								"heading" => "Border radius",								"value" => "5",								"suffix" => "px",								"dependency" => Array("element" => "line_style", "not_empty" => true),							),							array(								"type" => "ultimate_google_fonts",								"param_name" => "seperator_title_font",								"heading" => "Font Family",								"value" => "",								"dependency" => Array("element" => "time_sep_title", "not_empty" => true),								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts_style",								"heading" => "Font Style",								"param_name" => "seperator_title_font_style",								"value" => "",								"dependency" => Array("element" => "time_sep_title", "not_empty" => true),								"group" => "Typography"							),							array(								"type" => "number",								"heading" => "Font size",								"param_name" => "font_size",								"value" => "",								"suffix" => "px",								"dependency" => Array("element" => "time_sep_title", "not_empty" => true),								"group" => "Typography"							),													// Customize everything							array(								"type" => "textfield",								"class" => "",								"heading" => __("额外的类别", "smile"),								"param_name" => "el_class",								"value" => "",								"description" => __("添加额外的类名,将应用于时间表,你可以使用这个类来定制.", "smile"),							),					    )					) 				);				vc_map(					array(					   "name" => __("时间轴项目"),					   "base" => "icon_timeline_item",					   "class" => "vc_timeline_item",					   "icon" => "vc_timeline_item_icon",					   "category" => __('时间轴','smile'),					   "content_element" => true,					   "as_child" => array('only' => 'icon_timeline'),					   					   "params" => array(						 	array(								"type" => "textfield",								"class" => "",								"heading" => __("标题", "smile"),								"param_name" => "time_title",								"admin_label" => true,								"value" => "",								"description" => __("提供这个时间表条目的标题.", "smile"),							),							array(								"type" => "text",								"param_name" => "title_text_typography",								"heading" => __("<h2>标题设置</h2>"),								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts",								"heading" => "Font Family",								"param_name" => "title_font",								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts_style",								"heading" => "Font Style",								"param_name" => "title_font_style",								"value" => "",								"group" => "Typography"							),							array(								"type" => "number",								"param_name" => "title_font_size",								"heading" => "Font size",								"value" => "",								"suffix" => "px",								"group" => "Typography"							),							array(								"type" => "colorpicker",								"param_name" => "title_font_color",								"heading" => "Color",								"group" => "Typography"							),							array(								"type" => "textarea_html",								"class" => "",								"heading" => __("描述", "smile"),								"param_name" => "content",								"admin_label" => true,								"value" => "",								"description" => __("提供一些描述.", "smile"),							),							array(								"type" => "text",								"param_name" => "desc_text_typography",								"heading" => __("<h2>描述的设置</h2>"),								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts",								"heading" => "Font Family",								"param_name" => "desc_font",								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts_style",								"heading" => "Font Style",								"param_name" => "desc_font_style",								"value" => "",								"group" => "Typography"							),							array(								"type" => "number",								"param_name" => "desc_font_size",								"heading" => "Font size",								"value" => "",								"suffix" => "px",								"group" => "Typography"							),							array(								"type" => "colorpicker",								"param_name" => "desc_font_color",								"heading" => "Color",								"group" => "Typography"							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标显示:", "smile"),								"param_name" => "icon_type",								"value" => array(									"No Icon" => 'noicon',									"Font Icon Manager" => "selector",									"Custom Image Icon" => "custom",																	),								"description" => __("使用现有的字体图标</a> 或上传自定义图像.", "smile")							),							array(								"type" => "icon_manager",								"class" => "",								"heading" => __("选择图标  ","smile"),								"param_name" => "icon",								"value" => "",								"description" => __("单击并选择您选择的图标.如果你不能找到一个适合你的目的,你可以 <a href='admin.php?page=AIO_Icon_Manager' target='_blank'>add new here</a>.", "flip-box"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),							),							array(								"type" => "attach_image",								"class" => "",								"heading" => __("上传图片的缩略图:", "smile"),								"param_name" => "icon_img",								"value" => "",								"description" => __("上传自定义图片图标.", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("custom")),							),							array(								"type" => "number",								"class" => "",								"heading" => __("图像宽度 ", "smile"),								"param_name" => "img_width",								"value" => 48,								"min" => 16,								"max" => 512,								"suffix" => "px",								"description" => __("提供图像宽度", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("custom")),							),							array(								"type" => "number",								"class" => "",								"heading" => __("图标的大小", "smile"),								"param_name" => "icon_size",								"value" => 32,								"min" => 12,								"max" => 72,								"suffix" => "px",								"description" => __("你想要多大吗?", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("颜色 ", "smile"),								"param_name" => "icon_color",								"value" => "#DE5034",								"description" => __("给它一个好的油漆!", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),													),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标风格", "smile"),								"param_name" => "icon_style",								"value" => array(									//"Simple" => "none",									"Circle Background" => "circle",									"Square Background" => "square",									"Design your own" => "advanced",								),								"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),								"description" => __("我们有三个快速预定如果你匆忙.否则,创建自己的各种选择.", "smile"),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("背景颜色", "smile"),								"param_name" => "icon_color_bg",								"value" => "#fff",								"description" => __("为图标选择背景颜色.", "smile"),																		"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标边框样式", "smile"),								"param_name" => "icon_border_style",								"value" => array(									"None" => "",									"Solid"=> "solid",									"Dashed" => "dashed",									"Dotted" => "dotted",									"Double" => "double",									"Inset" => "inset",									"Outset" => "outset",								),								"description" => __("为图标选择边框样式.","smile"),								"dependency" => Array("element" => "icon_style", "value" => array("advanced")),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("边框色彩", "smile"),								"param_name" => "icon_color_border",								"value" => "#dbdbdb",								"description" => __("为图标选择边框颜色.", "smile"),									"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("边缘宽度", "smile"),								"param_name" => "icon_border_size",								"value" => 1,								"min" => 1,								"max" => 10,								"suffix" => "px",								"description" => __("边界的厚度.", "smile"),								"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("边界半径 ", "smile"),								"param_name" => "icon_border_radius",								"value" => 500,								"min" => 1,								"max" => 500,								"suffix" => "px",								"description" => __("0像素值将创建一个广场边界. 当你增加价值,形状圆内转换缓慢. (例 500 像素).", "smile"),								"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("背景的大小", "smile"),								"param_name" => "icon_border_spacing",								"value" => 50,								"min" => 30,								"max" => 500,								"suffix" => "px",								"description" => __("间距从中心图标到边界的边界/背景", "smile"),								"dependency" => Array("element" => "icon_style", "value" => array("advanced")),							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("动画 ","smile"), 								"param_name" => "icon_animation",								"value" => array(							 		__("没有动画","smile") => "",									__("旋转","smile") => "swing",									__("脉冲 ","smile") => "pulse",									__("淡入","smile") => "fadeIn",									__("从上淡入","smile") => "fadeInUp",									__("从下淡入","smile") => "fadeInDown",									__("从左淡入","smile") => "fadeInLeft",									__("从右淡入","smile") => "fadeInRight",									__("从上淡入长时间","smile") => "fadeInUpBig",									__("从下淡入长时间","smile") => "fadeInDownBig",									__("从左淡入长时间","smile") => "fadeInLeftBig",									__("从右淡入长时间","smile") => "fadeInRightBig",									__("向下滑动","smile") => "slideInDown",									__("向左滑动","smile") => "slideInLeft",									__("向左滑动","smile") => "slideInLeft",									__("弹跳","smile") => "bounceIn",									__("向上弹跳","smile") => "bounceInUp",									__("向下弹跳","smile") => "bounceInDown",									__("向左弹跳","smile") => "bounceInLeft",									__("向右弹跳","smile") => "bounceInRight",									__("旋转","smile") => "rotateIn",									__("光速","smile") => "lightSpeedIn",									__("滚动","smile") => "rollIn",									),								"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),								"description" => __("喜欢CSS3动画吗?我们有几个选项!","smile")						  	),							/*array(								"type" => "dropdown",								"class" => "",								"heading" => __("Timeline Item Position", "smile"),								"param_name" => "time_position",								"admin_label" => true,								"value" => array(									"Auto" =>'auto',									"Left" => "left",									"Right" => "right",																	),								"description" => __("Alignment of timeline item with respect to the connecter line.", "smile"),							),*/													array(									"type" => "dropdown",									"class" => "",									"heading" => __("申请链接:", "smile"),									"param_name" => "time_link_apply",									"value" => array(										"None" => "",										"Complete box" => "box",										"Box Title" => "title",										"Display Read More" => "more",									),									"description" => __("选择的元素链接.", "icon-box")								),									array(									"type" => "vc_link",									"class" => "",									"heading" => __("添加链接 ", "smile"),									"param_name" => "time_link",									"value" => "",									"dependency" => Array("element" => "time_link_apply","value" => array("more","title","box")),									"description" => __("提供的链接将被应用到这个时间表.", "smile")								),															array(								"type" => "textfield",								"class" => "",								"heading" => __("阅读更多的文本", "smile"),								"param_name" => "time_read_text",								"value" => "Read More",								"description" => __("自定义文本阅读更多.", "smile"),								"dependency" => Array("element" => "time_link_apply","value" => array("more")),							),													// Customize everything							array(								"type" => "textfield",								"class" => "",								"heading" => __("额外的类别", "smile"),								"param_name" => "el_class",								"value" => "",								"description" => __("添加额外的类名,将应用于时间表,你可以使用这个类来定制.", "smile"),							),					    )					) 				);											vc_map(					array(					   "name" => __("时间表特色项目"),					   "base" => "icon_timeline_feat",					   "class" => "vc_timeline_feat",					   "icon" => "vc_timeline_feat_icon",					   "category" => __('时间轴','smile'),					   "content_element" => true,					   "as_child" => array('only' => 'icon_timeline'),					   						 "params" => array(						 	array(								"type" => "textfield",								"class" => "",								"heading" => __("标题", "smile"),								"param_name" => "time_title",								"admin_label" => true,								"value" => "",								"description" => __("提供这个时间表条目的标题.", "smile"),							),							array(								"type" => "text",								"param_name" => "title_text_typography",								"heading" => __("<h2>标题的设置</h2>"),								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts",								"heading" => "Font Family",								"param_name" => "title_font",								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts_style",								"heading" => "Font Style",								"param_name" => "title_font_style",								"value" => "",								"group" => "Typography"							),							array(								"type" => "number",								"param_name" => "title_font_size",								"heading" => "Font size",								"value" => "",								"suffix" => "px",								"group" => "Typography"							),							array(								"type" => "colorpicker",								"param_name" => "title_font_color",								"heading" => "Color",								"group" => "Typography"							),							array(								"type" => "textarea_html",								"class" => "",								"heading" => __("描述 ", "smile"),								"param_name" => "content",								"admin_label" => true,								"value" => "",								"description" => __("提供一些描述.", "smile"),							),							array(								"type" => "text",								"param_name" => "desc_text_typography",								"heading" => __("<h2>描述的设置</h2>"),								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts",								"heading" => "Font Family",								"param_name" => "desc_font",								"value" => "",								"group" => "Typography"							),							array(								"type" => "ultimate_google_fonts_style",								"heading" => "Font Style",								"param_name" => "desc_font_style",								"value" => "",								"group" => "Typography"							),							array(								"type" => "number",								"param_name" => "desc_font_size",								"heading" => "Font size",								"value" => "",								"suffix" => "px",								"group" => "Typography"							),							array(								"type" => "colorpicker",								"param_name" => "desc_font_color",								"heading" => "Color",								"group" => "Typography"							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标显示:", "smile"),								"param_name" => "icon_type",								"value" => array(									"No Icon" => 'noicon',									"Font Icon Manager" => "selector",									"Custom Image Icon" => "custom",																	),								"description" => __("使用现有的字体图标</a> 或上传自定义图像.", "smile")							),							array(								"type" => "icon_manager",								"class" => "",								"heading" => __("选择图标 ","smile"),								"param_name" => "icon",								"value" => "",								"description" => __("单击并选择您选择的图标.如果你不能找到一个适合你的目的,你可以 <a href='admin.php?page=AIO_Icon_Manager' target='_blank'>add new here</a>.", "flip-box"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),							),							array(								"type" => "attach_image",								"class" => "",								"heading" => __("上传图片的缩略图:", "smile"),								"param_name" => "icon_img",								"value" => "",								"description" => __("上传自定义图片图标.", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("custom")),							),							array(								"type" => "number",								"class" => "",								"heading" => __("图像宽度", "smile"),								"param_name" => "img_width",								"value" => 48,								"min" => 16,								"max" => 512,								"suffix" => "px",								"description" => __("提供图像宽度", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("custom")),							),							array(								"type" => "number",								"class" => "",								"heading" => __("图标的大小", "smile"),								"param_name" => "icon_size",								"value" => 32,								"min" => 12,								"max" => 72,								"suffix" => "px",								"description" => __("你想要多大吗?", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("颜色 ", "smile"),								"param_name" => "icon_color",								"value" => "#DE5034",								"description" => __("给它一个好的油漆!", "smile"),								"dependency" => Array("element" => "icon_type","value" => array("selector")),													),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标样式", "smile"),								"param_name" => "icon_style",								"value" => array(									//"Simple" => "none",									"Circle Background" => "circle",									"Square Background" => "square",									"Design your own" => "advanced",								),								"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),								"description" => __("我们有三个快速预定如果你匆忙.否则,创建自己的各种选择.", "smile"),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("背景颜色", "smile"),								"param_name" => "icon_color_bg",								"value" => "#fff",								"description" => __("为图标选择背景颜色.", "smile"),																		"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("图标边框样式", "smile"),								"param_name" => "icon_border_style",								"value" => array(									"None" => "",									"Solid"=> "solid",									"Dashed" => "dashed",									"Dotted" => "dotted",									"Double" => "double",									"Inset" => "inset",									"Outset" => "outset",								),								"description" => __("选择边框样式图标.","smile"),								"dependency" => Array("element" => "icon_style", "value" => array("advanced")),							),							array(								"type" => "colorpicker",								"class" => "",								"heading" => __("边框色彩", "smile"),								"param_name" => "icon_color_border",								"value" => "#dbdbdb",								"description" => __("为图标选择边框颜色.", "smile"),									"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("边框宽度", "smile"),								"param_name" => "icon_border_size",								"value" => 1,								"min" => 1,								"max" => 10,								"suffix" => "px",								"description" => __("边界的厚度.", "smile"),								"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("边框半径 ", "smile"),								"param_name" => "icon_border_radius",								"value" => 500,								"min" => 1,								"max" => 500,								"suffix" => "px",								"description" => __("0像素值将创建一个广场边界. 当你增加价值,形状圆内转换缓慢. (例 500 像素).", "smile"),								"dependency" => Array("element" => "icon_border_style", "not_empty" => true),							),							array(								"type" => "number",								"class" => "",								"heading" => __("背景的大小", "smile"),								"param_name" => "icon_border_spacing",								"value" => 50,								"min" => 30,								"max" => 500,								"suffix" => "px",								"description" => __("间距从中心图标到边界的边界/背景", "smile"),								"dependency" => Array("element" => "icon_style", "value" => array("advanced")),							),							array(								"type" => "dropdown",								"class" => "",								"heading" => __("动画 ","smile"), 								"param_name" => "icon_animation",								"value" => array(							 		__("没有动画","smile") => "",									__("旋转","smile") => "swing",									__("脉冲 ","smile") => "pulse",									__("淡入","smile") => "fadeIn",									__("从上淡入","smile") => "fadeInUp",									__("从下淡入","smile") => "fadeInDown",									__("从左淡入","smile") => "fadeInLeft",									__("从右淡入","smile") => "fadeInRight",									__("从上淡入长时间","smile") => "fadeInUpBig",									__("从下淡入长时间","smile") => "fadeInDownBig",									__("从左淡入长时间","smile") => "fadeInLeftBig",									__("从右淡入长时间","smile") => "fadeInRightBig",									__("向下滑动","smile") => "slideInDown",									__("向左滑动","smile") => "slideInLeft",									__("向右滑动","smile") => "slideInLeft",									__("弹跳","smile") => "bounceIn",									__("向上弹跳","smile") => "bounceInUp",									__("向下弹跳","smile") => "bounceInDown",									__("向左弹跳","smile") => "bounceInLeft",									__("向右弹跳","smile") => "bounceInRight",									__("旋转","smile") => "rotateIn",									__("光速","smile") => "lightSpeedIn",									__("滚动 ","smile") => "rollIn",									),								"dependency" => Array("element" => "icon_type","value" => array("selector","custom")),								"description" => __("喜欢CSS3动画吗?我们有几个选项!","smile")						  	),							/*array(								"type" => "dropdown",								"class" => "",								"heading" => __("Timeline Item Position", "smile"),								"param_name" => "time_position",								"admin_label" => true,								"value" => array(									"Auto" =>'auto',									"Left" => "left",									"Right" => "right",																	),								"description" => __("Alignment of timeline item with respect to the connecter line.", "smile"),							),*/													array(									"type" => "dropdown",									"class" => "",									"heading" => __("申请链接:", "smile"),									"param_name" => "time_link_apply",									"value" => array(										"None" => "",										"Complete box" => "box",										"Box Title" => "title",										"Display Read More" => "more",									),									"description" => __("选择的元素链接.", "icon-box")								),									array(									"type" => "vc_link",									"class" => "",									"heading" => __("添加链接", "smile"),									"param_name" => "time_link",									"value" => "",									"dependency" => Array("element" => "time_link_apply","value" => array("more","title","box")),									"description" => __("提供的链接将被应用到这个时间表.", "smile")								),															array(								"type" => "textfield",								"class" => "",								"heading" => __("阅读更多的文本", "smile"),								"param_name" => "time_read_text",								"value" => "Read More",								"description" => __("自定义文本阅读更多.", "smile"),								"dependency" => Array("element" => "time_link_apply","value" => array("more")),							),													// Customize everything							array(								"type" => "textfield",								"class" => "",								"heading" => __("额外的类别", "smile"),								"param_name" => "el_class",								"value" => "",								"description" => __("添加额外的类名,将应用于时间表,你可以使用这个类来定制.", "smile"),							),							array(								"type" => "dropdown",								"heading" => "Arrow position",								"param_name" => "arrow_position",								"value" => array(									"Top" => "top",									"Bottom" => "bottom"								)							)					    )					) 				);			}//endif		}		function icon_timeline($atts, $content = null)		{			// enqueue js			wp_enqueue_script('ultimate-appear');			if(get_option('ultimate_row') == "enable"){				wp_enqueue_script('ultimate-row-bg',plugins_url('../assets/js/',__FILE__).'ultimate_bg.js');			}			wp_enqueue_script('ultimate-custom');			// enqueue css			wp_enqueue_style('ultimate-animate');			wp_enqueue_style('ultimate-style');			wp_enqueue_script('masonry',plugins_url('../assets/js/',__FILE__).'masonry.js', array(), false, true);			wp_enqueue_style('aio-timeline',plugins_url('../assets/css/',__FILE__).'timeline.css');			$timeline_line_color = $timeline_line_style = '';			extract(shortcode_atts(array(					'timeline_style'=>'',							'timeline_line_color' =>'',				'timeline_line_style' =>'',				'time_sep_bg_color'=>'',				'time_sep_color' =>'',				'time_block_bg_color'=>'',				'timeline_layout' =>'',				'tl_animation'=>'',				'custom_width'=>'',			), $atts));			$data = $cw = $line_style = $output = '';			if($timeline_layout=='timeline-custom-width'){				$cw ='data-timeline-cutom-width="'.$custom_width.'"';			}			if($time_sep_color!=''){				$time_sep_color='data-time_sep_color="'.$time_sep_color.'"';			}			if($time_sep_bg_color!=''){				$time_sep_bg_color='data-time_sep_bg_color="'.$time_sep_bg_color.'"';			}			if($time_block_bg_color!=''){				$time_block_bg_color='data-time_block_bg_color="'.$time_block_bg_color.'"';			}			if($timeline_line_color!=''){				$line_style ='border-right-style:'.$timeline_line_style.';';			}			if($timeline_line_style!=''){				$line_style .='border-right-color:'.$timeline_line_color.';';				}			if($timeline_style=='jstime'){				$output .= '<div class="'.$timeline_style.' timeline_preloader" style="opacity:0;width:35px;margin:auto;margin-top:30px;"><img style="box-shadow:none;"alt="timeline_pre_loader" src="'.plugins_url().'/Ultimate_VC_Addons/assets/img/timeline_pre-loader.gif" /></div>';					$output .= '<div class="smile-icon-timeline-wrap  '.$timeline_style.' '.$timeline_layout.' '.$tl_animation.'" '.$cw.' '.$time_sep_bg_color.' '.$time_block_bg_color.' '.$time_sep_color.' style="opacity:0">';			}			else{								$output .= '<div class="smile-icon-timeline-wrap  '.$timeline_style.' '.$timeline_layout.' '.$tl_animation.'" '.$cw.' '.$time_sep_bg_color.' '.$time_block_bg_color.' '.$time_sep_color.'>';			}			$output .= '<div class="timeline-line " style="'.$line_style.'"><z></z></div>';			$output .='<div class="timeline-wrapper">';			$output .= do_shortcode($content);			$output .= '</div>';			$output .= '</div>';									return $output ;		}		function icon_timeline_sep($atts, $content=null){			$time_sep_title = $time_sep_color = $time_sep_bg_color = $animation = $el_class = $line_style = $line_color =  $icon_style = $seperator_style = '';			extract(shortcode_atts(array(				'time_sep_title' => '. . .',				'time_sep_color' => '',				'time_sep_bg_color' =>'',				'line_style' =>'',				'time_block_bg_color'=>'',				'line_color' =>'',				'line_width' =>'',				'line_radius' => '',				'el_class' =>'',				'font_size'	=>'',				'seperator_title_font' => '',				'seperator_title_font_style' => ''			), $atts));			//$li_prefix = '<div class="timeline-block separator'.$el_class.'">';			//$li_suffix = '</div>';				if($time_sep_color != '')				$seperator_style .= 'color:'.$time_sep_color.';';			if($line_style != '')				$seperator_style .= 'border-style:'.$line_style.';';			if($line_color != '')				$seperator_style .= 'border-color:'.$line_color.';';			if($line_width != '')				$seperator_style .= 'border-width:'.$line_width.'px;';			if($line_radius != '')				$seperator_style .= 'border-radius:'.$line_radius.'px;';			if($font_size != '')				$seperator_style .= 'font-size:'.$font_size.'px;';			if($seperator_title_font != '')			{				$font_family = get_ultimate_font_family($seperator_title_font);				$seperator_style .= 'font-family:'.$font_family.';';					$args = array(					$seperator_title_font				);				enquque_ultimate_google_fonts($args);				if($seperator_title_font_style != '')				{					$font_style = get_ultimate_font_family($seperator_title_font_style);					$seperator_style .= $font_style;				}			}			$output ='</div>';			$output .= '				<div class="timeline-separator-text" data-sep-col="'.$time_sep_color.'" data-sep-bg-col="'.$time_sep_bg_color.'"><span class="sep-text" style="'.$seperator_style.'">'.$time_sep_title.'</span></div><div class="timeline-wrapper ">';			//$li_prefix = '<div class="timeline-block separator'.$el_class.'">';			//$li_suffix = '</div>';						$style ='';			//	$style .= $time_sep_bg_color!='' ?  'background:'.$time_sep_bg_color.';' : '';			//	$style .= $time_sep_color!='' ?  'color:'.$time_sep_color.';' : '';				//$output .='<div class="ult-timeline-title '.$el_class.' " style="'.$style.'">'.$time_sep_title.'</div>';			return $output;		}		function icon_timeline_feat($atts,$content = null){			$icon_type = $icon_img = $img_width = $icon = $icon_color = $icon_color_bg = $icon_size = $icon_style = $icon_border_style = $icon_border_radius = $icon_color_border = $icon_border_size = $icon_border_spacing = $icon_link = $el_class = $icon_animation = $time_title = $time_link = $time_link_apply = $time_read_text = $time_icon = $time_icon_color =  $time_icon_bg_color = $el_class =  $time_position  = $font_size = $line_color = $animation = $icon_border_style = $icon_border_size = $border_color = $title_style = $desc_style = '' ;			$font_args = array();			extract(shortcode_atts(array(				'icon_type' => '',				'icon' => '',				'icon_img' => '',				'img_width' => '',				'icon_size' => '',								'icon_color' => '',				'icon_style' => '',				'icon_color_bg' => '',				'icon_color_border' => '',							'icon_border_style' => '',				'icon_border_size' => '',				'icon_border_radius' => '',				'icon_border_spacing' => '',				'icon_link' => '',				'icon_animation' => '',				'time_title'	  => '',				'title_font' => '',				'title_font_style' => '',				'title_font_size' => '',				'title_font_color' => '',				'desc_font' => '',				'desc_font_style' => '',				'desc_font_size' => '',				'desc_font_color' => '',							//'time_position' => '',				'time_link'	   => '',								'time_link_apply'   => '',								'time_read_text' => '', 				'el_class'	  => '',				//parent atts								'font_size' => '',				'line_color' => '',				//SEp				'time_sep_color' => '',				'time_sep_bg_color' =>'',				'line_style' =>'',				'time_block_bg_color'=>'',				'line_color' =>'',				'arrow_position' => ''				),$atts));			$html = '';			$line_style = $custom_style = $bg_cls = '';			$box_icon = do_shortcode('[just_icon icon_type="'.$icon_type.'" icon="'.$icon.'" icon_img="'.$icon_img.'" img_width="'.$img_width.'" icon_size="'.$icon_size.'" icon_color="'.$icon_color.'" icon_style="'.$icon_style.'" icon_color_bg="'.$icon_color_bg.'" icon_color_border="'.$icon_color_border.'"  icon_border_style="'.$icon_border_style.'" icon_border_size="'.$icon_border_size.'" icon_border_radius="'.$icon_border_radius.'" icon_border_spacing="'.$icon_border_spacing.'" icon_link="'.$icon_link.'" icon_animation="'.$icon_animation.'"]');			if($icon_color_bg == "")				$bg_cls .= 'tl-icon-no-bg';			if($line_color!='')				$line_style = 'border-right-color:'.$line_color.';';			if($font_size!=''){				$line_style.='top:'.($font_size*2).'px;';			}			/* title */			if($title_font != '')			{				$font_family = get_ultimate_font_family($title_font);				$title_style .= 'font-family:'.$font_family.';';				array_push($font_args, $title_font);			}			if($title_font_style != '')				$title_style .= get_ultimate_font_style($title_font_style);			if($title_font_size != '')				$title_style .= 'font-size:'.$title_font_size.'px;';			if($title_font_color != '')				$title_style .= 'color:'.$title_font_color.';';			/* description */			if($desc_font != '')			{				$font_family = get_ultimate_font_family($desc_font);				$desc_style .= 'font-family:'.$font_family.';';				array_push($font_args, $desc_font);			}			if($desc_font_style != '')				$desc_style .= get_ultimate_font_style($desc_font_style);			if($desc_font_size != '')				$desc_style .= 'font-size:'.$desc_font_size.'px;';			if($desc_font_color != '')				$desc_style .= 'color:'.$desc_font_color.';';			enquque_ultimate_google_fonts($font_args);			$li_prefix = '<div class="timeline-block '.$el_class.'"><div class="timeline-dot"></div><div class="ult-timeline-arrow"><s></s><l></l></div>';						$li_suffix ='</div>';			$style = ($time_icon_color !== '') ? ' color:'.$time_icon_color.';' : ' ';			$style .= ($time_icon_bg_color !== '') ? ' background:'.$time_icon_bg_color.';' : ' ';			$style .= ($font_size !== '') ? ' font-size:'.$font_size.'px;' : ' ';			$icon_pad = '';			$header_block_style ='';						$icon = '<div class="timeline-icon-block"'.$icon_pad.'><div class="ult-timeline-icon '.$bg_cls.'" style="'.$style.'">';			if($icon_type!='noicon')				$icon .= $box_icon;//'<i  style="'.$icon_style.'" class="'.$time_icon.'" ></i>';			$icon .= '</div> <!-- icon --></div>';				$link_sufix = $link_prefix = '';								if($time_link !=''){				$href = vc_build_link($time_link);								$link_prefix = '<a href = '.$href['url'].'>';$link_sufix = '</a>';							}			$vv_link ='';								if($time_link !=''){				$href = vc_build_link($time_link);								$link_prefix = '<a class="tl-desc-a" href = '.$href['url'].'>';				$vv_link = $href['url'];				$link_sufix = '</a>';							}			$header = '';				$header .= '<div class="timeline-header-block" '.$header_block_style.'>							<div class="timeline-header" style="">';					$header .= '<h3 class="ult-timeline-title" style="'.$title_style.'">'.$time_title.'</h3>';			if ($time_link_apply!='' && $time_link_apply == 'title') {				$header = $link_prefix.$header.$link_sufix;				//$header.='<a href="'.$vv_link.'" class="link-title"></a>';			}			$header .= '<p style="'.$desc_style.'">'.do_shortcode($content).'</p>';									if ($time_link_apply!='' && $time_link_apply == 'more') {				$header = $header.'<p>'.$link_prefix.$time_read_text.$link_sufix.'</p>';			}				$header .= '</div> <!-- header --></div>';			$contt='';			if($time_link_apply!='' && $time_link_apply == 'box'){				$contt.='<a href="'.$vv_link.'" class="link-box"></a>';				//$li_prefix = $link_prefix.$li_prefix;				//$li_suffix = $link_sufix.$li_suffix;			}			$icon_wrap_preffix='<div class="timeline-icon-block">';			$icon_wrap_suffix='</div>';			$heading_preffix='<div class="timeline-header-block">';			$heading_suffix='</div>';			$html =  $icon . $header ;			$feat_spl ='</div>';			if($arrow_position == 'bottom') // featured item at top				$ext_class = 'feat-top';			else				$ext_class = '';			$feat_spl .= '<div class="timeline-feature-item feat-item '.$ext_class.'">';			$contt.='<div class="feat-dot '.$ext_class.'"><div class="timeline-dot"></div></div><div class="ult-timeline-arrow '.$ext_class.'"><s></s><l></l></div>'.$html;			$contt .='</div><div class="timeline-wrapper ">';			$feat_spl .=$contt;			return $feat_spl ;		}		function icon_timeline_item($atts,$content = null){			$icon_type = $icon_img = $img_width = $icon = $icon_color = $icon_color_bg = $icon_size = $icon_style = $icon_border_style = $icon_border_radius = $icon_color_border = $icon_border_size = $icon_border_spacing = $icon_link = $el_class = $icon_animation = $time_title = $time_link = $time_link_apply = $time_read_text = $time_icon = $time_icon_color =  $time_icon_bg_color = $el_class =  $time_position  = $font_size = $line_color = $animation = $icon_border_style = $icon_border_size = $border_color = $title_style = $desc_style = '' ;			$font_args = array();			extract(shortcode_atts(array(				'icon_type' => '',				'icon' => '',				'icon_img' => '',				'img_width' => '',				'icon_size' => '',								'icon_color' => '',				'icon_style' => '',				'icon_color_bg' => '',				'icon_color_border' => '',							'icon_border_style' => '',				'icon_border_size' => '',				'icon_border_radius' => '',				'icon_border_spacing' => '',				'icon_link' => '',				'icon_animation' => '',				'time_title'	  => '',				'title_font' => '',				'title_font_style' => '',				'title_font_size' => '',				'title_font_color' => '',				'desc_font' => '',				'desc_font_style' => '',				'desc_font_size' => '',				'desc_font_color' => '',									//'time_position' => '',				'time_link'	   => '',								'time_link_apply'   => '',								'time_read_text' => '', 				'el_class'	  => '',				//parent atts								'font_size' => '',				'line_color' => '',				),$atts));			$html = '';			$line_style = $custom_style = $bg_cls = '';			$box_icon = do_shortcode('[just_icon icon_type="'.$icon_type.'" icon="'.$icon.'" icon_img="'.$icon_img.'" img_width="'.$img_width.'" icon_size="'.$icon_size.'" icon_color="'.$icon_color.'" icon_style="'.$icon_style.'" icon_color_bg="'.$icon_color_bg.'" icon_color_border="'.$icon_color_border.'"  icon_border_style="'.$icon_border_style.'" icon_border_size="'.$icon_border_size.'" icon_border_radius="'.$icon_border_radius.'" icon_border_spacing="'.$icon_border_spacing.'" icon_link="'.$icon_link.'" icon_animation="'.$icon_animation.'"]');			if($icon_color_bg == "")				$bg_cls .= 'tl-icon-no-bg';			if($line_color!='')				$line_style = 'border-right-color:'.$line_color.';';			if($font_size!=''){				$line_style.='top:'.($font_size*2).'px;';			}			/* title */			if($title_font != '')			{				$font_family = get_ultimate_font_family($title_font);				$title_style .= 'font-family:'.$font_family.';';				array_push($font_args, $title_font);			}			if($title_font_style != '')				$title_style .= get_ultimate_font_style($title_font_style);			if($title_font_size != '')				$title_style .= 'font-size:'.$title_font_size.'px;';			if($title_font_color != '')				$title_style .= 'color:'.$title_font_color.';';			/* description */			if($desc_font != '')			{				$font_family = get_ultimate_font_family($desc_font);				$desc_style .= 'font-family:'.$font_family.';';				array_push($font_args, $desc_font);			}			if($desc_font_style != '')				$desc_style .= get_ultimate_font_style($desc_font_style);			if($desc_font_size != '')				$desc_style .= 'font-size:'.$desc_font_size.'px;';			if($desc_font_color != '')				$desc_style .= 'color:'.$desc_font_color.';';			enquque_ultimate_google_fonts($font_args);			$li_prefix = '<div class="timeline-block '.$el_class.'"><div class="timeline-dot"></div><div class="ult-timeline-arrow"><s></s><l></l></div>';						$li_suffix ='</div>';			$style = ($time_icon_color !== '') ? ' color:'.$time_icon_color.';' : ' ';			$style .= ($time_icon_bg_color !== '') ? ' background:'.$time_icon_bg_color.';' : ' ';			$style .= ($font_size !== '') ? ' font-size:'.$font_size.'px;' : ' ';			$icon_pad = '';			$header_block_style ='';			$icon = '<div class="timeline-icon-block"><div class="ult-timeline-icon '.$bg_cls.'" style="'.$style.'">';			if($icon_type!='noicon')				$icon .= $box_icon;//'<i  style="'.$icon_style.'" class="'.$time_icon.'" ></i>';			$icon .= '</div> <!-- icon --></div>';				$link_sufix = $link_prefix = '';			$vv_link ='';								if($time_link !=''){				$href = vc_build_link($time_link);								$link_prefix = '<a class="tl-desc-a" href = '.$href['url'].'>';				$vv_link = $href['url'];				$link_sufix = '</a>';							}			$header = '';				$header .= '<div class="timeline-header-block" '.$header_block_style.'>							<div class="timeline-header" style="">';					$header .= '<h3 class="ult-timeline-title" style="'.$title_style.'">'.$time_title.'</h3>';			if ($time_link_apply!='' && $time_link_apply == 'title') {				//$header = $link_prefix.$header.$link_sufix;				$header.='<a href="'.$vv_link.'" class="link-title"></a>';			}			$header .= '<p style="'.$desc_style.'">'.do_shortcode($content).'</p>';									if ($time_link_apply!='' && $time_link_apply == 'more') {				$header = $header.'<p>'.$link_prefix.$time_read_text.$link_sufix.'</p>';			}				$header .= '</div> <!-- header --></div>';			if($time_link_apply!='' && $time_link_apply == 'box'){				$header.='<a href="'.$vv_link.'" class="link-box"></a>';				//$li_prefix = $link_prefix.$li_prefix;				//$li_suffix = $link_sufix.$li_suffix;			}			$icon_wrap_preffix='<div class="timeline-icon-block">';			$icon_wrap_suffix='</div>';			$heading_preffix='<div class="timeline-header-block">';			$heading_suffix='</div>';			$html = $li_prefix . $icon . $header .  $li_suffix ;			return $html ;		}	}}if(class_exists('WPBakeryShortCodesContainer')){	class WPBakeryShortCode_icon_timeline extends WPBakeryShortCodesContainer {	}	class WPBakeryShortCode_icon_timeline_item extends WPBakeryShortCode {	}}if(class_exists('Ultimate_Icon_Timeline')){	$Ultimate_Icon_Timeline = new Ultimate_Icon_Timeline();}